services:
  online-store:
    image: ${DOCKER_REGISTRY-}online-store
    container_name: online-store
    build:
      context: .
      dockerfile: online-store/OnlineStore/Dockerfile
    depends_on:
      - postgres-aspnet
      - kafka
      - model_server

    ports:
      - 4044:4044
      #- 5054:5054
    volumes:
      - keyring:/app/keyring
    environment:
      #- ASPNETCORE_Kestrel__Certificates__Default__Path=/app/certificates/aspnetapp.pfx
      #- ASPNETCORE_Kestrel__Certificates__Default__Password=1234
      #- ASPNETCORE_URLS=https://+:5054;http://+:4044
      - ASPNETCORE_URLS=http://+:4044
  
  model_server:
    image: ${DOCKER_REGISTRY-}model_server
    build:
      context: .
      dockerfile: recommendation_system/Dockerfile
    container_name: model_server
    depends_on:
      - postgres-recommendation-system
      - kafka
    ports:
      - "8001:8001"
    env_file:
      - recommendation_system/.env
    #volumes:
    #  - ./model:/app/model
    #  - ./backups:/app/backups
    command: "python model/model_server.py"
    #entrypoint: ["./scripts/wait-for-db.sh", "postgres-recommendation-system:5432", "--", "python", "model/model_server.py"]

  postgres-recommendation-system:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_DB: recommendation_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - pgdata-recommendation-system:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d recommendation_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres-aspnet:
    image: postgres:15
    container_name: aspnet_postgres
    restart: always
    environment:
      POSTGRES_USER: store_user
      POSTGRES_PASSWORD: store_pass
      POSTGRES_DB: OnlineStoreDb
      PGPORT: 5433
    ports:
      - "5433:5433"
    volumes:
      - pgdata-aspnet:/var/lib/postgresql/data
    #networks:
    #  - aspnet_net

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    
volumes:
  pgdata-recommendation-system:
  pgdata-aspnet:
  keyring:
