# scripts/load_train_to_db.py
import os
import asyncio
import pandas as pd
from sqlalchemy import text
from db.db import AsyncSessionLocal
from dotenv import load_dotenv

load_dotenv()

CSV_PATH = "data/processed/train_ratings.csv"

async def load_data_to_db():
    if not os.path.exists(CSV_PATH):
        raise FileNotFoundError(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {CSV_PATH}")

    print(f"üì• –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ {CSV_PATH}...")
    df = pd.read_csv(CSV_PATH)

    print(f"üîÑ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")

    async with AsyncSessionLocal() as session:
        async with session.begin():
            for _, row in df.iterrows():
                try:
                    await session.execute(text("""
                        INSERT INTO user_ratings (user_id, book_id, rating)
                        VALUES (:user_id, :book_id, :rating)
                    """), {
                        "user_id": str(row["user_id"]),
                        "book_id": str(row["book_id"]),
                        "rating": row["rating"],
                    })
                    print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –∑–∞–ø–∏—Å—å: user_id={row['user_id']}, book_id={row['book_id']}")
                except Exception as e:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—Å—Ç–∞–≤–∫–µ –∑–∞–ø–∏—Å–∏: {e}")
        await session.commit()

    print("‚úÖ –í—Å–µ –∑–∞–ø–∏—Å–∏ —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.")

if __name__ == "__main__":
    try:
        asyncio.run(load_data_to_db())
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö: {e}")
