import pandas as pd
import requests
from tqdm import tqdm

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
CSV_PATH = "data/processed/user_product_train.csv"
API_URL = "http://localhost:8001/recommend"  # URL model_server
TOP_K = 5

def test_model_api():
    # –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    df = pd.read_csv(CSV_PATH)

    if "user_id" not in df.columns:
        raise ValueError("–í CSV –Ω–µ –Ω–∞–π–¥–µ–Ω —Å—Ç–æ–ª–±–µ—Ü user_id")

    user_ids = df["user_id"].unique()

    print(f"üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –º–æ–¥–µ–ª—å –Ω–∞ {len(user_ids)} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö...")

    success = 0
    fail = 0
    failed_users = []

    for user_id in tqdm(user_ids):
        url = f"{API_URL}/{user_id}?top_k={TOP_K}"
        try:
            response = requests.get(url, timeout=5)
            if response.status_code == 200:
                data = response.json()
                if "recommendations" in data:
                    success += 1
                else:
                    fail += 1
                    failed_users.append(user_id)
            else:
                fail += 1
                failed_users.append(user_id)
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {e}")
            fail += 1
            failed_users.append(user_id)

    print("\n‚úÖ –£—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ:", success)
    print("‚ùå –û—à–∏–±–æ–∫:", fail)

    if failed_users:
        print("\nüìã –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ —Å –æ—à–∏–±–∫–æ–π:")
        for uid in failed_users[:10]:  # –ü–æ–∫–∞–∂–µ–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã—Ö 10
            print("-", uid)

if __name__ == "__main__":
    test_model_api()
